//
//  FONT RELATED UTILITIES
//
$font-colors:   (   
                    light: $light,
                    dark: $dark
                );
@mixin font-color-options {
    @each $label, $option in $font-colors {
        .text-#{$label} { color: $option; }
    }
}
@include font-color-options;

//
//  DISPLAY RELATED UTILITIES
//

$display-options: block, inline, inline-block, flex, inline-flex, table, grid, hidden, none;
@mixin display-options {
    @each $option in $display-options {
        .is-#{$option} { display: $option; }
    }
}
@include display-options;

$jc-options: center, start, end, flex-start, flex-end, left, right, normal, space-between, space-around, space-evenly, stretch;
@mixin justify-content-options {
    @each $option in $jc-options {
        .justify-content-#{$option} { justify-content: $option; }
    }
}
@include justify-content-options;

$ai-options: normal, stretch, center, start, end, flex-start, flex-end, self-start, self-end, baseline, first baseline, last baseline, safe center, unsafe senter;
@mixin align-items-options {
    @each $option in $ai-options {
        .align-items-#{$option} { align-items: $option; }
    }
}
@include align-items-options;

$fd-options: row, row-reverse, column, column-reverse;
@mixin flex-direction-options {
    @each $option in $fd-options {
        .flex-#{$option} { flex-direction: $option; }
    }
}
@include flex-direction-options;


//
//  DISPLAY RELATED RESPONSIVE UTILITIES
//
$breakpoints:   (   
                    xsmall: $xs-bk,
                    small: $sm-bk,
                    medium: $md-bk,
                    large: $lg-bk,
                    xlarge: $xl-bk,
                    xxlarge: $xxl-bk
                );
@mixin show-on-options {
    @each $label, $breakpoint in $breakpoints {
        .show-on-#{$label} {
            display: none;
            @media only screen and (max-width: $breakpoint) {
                display: initial;
            }
        }
    }
}
@include show-on-options;
@mixin show-on($label) {
    display: none;
    @media only screen and (max-width: map-get($breakpoints, $label)) {
        display: initial;
    }
}

@mixin hide-on-options {
    @each $label, $breakpoint in $breakpoints {
        .hide-on-#{$label} {
            @media only screen and (max-width: $breakpoint) {
                display: none;
            }
        }
    }
}
@include hide-on-options;
@mixin hide-on($label) {
    @media only screen and (min-width: map-get($breakpoints, $label)) {
        display: none;
    }
}

@mixin above-mq($label) {
    @media only screen and (min-width: map-get($breakpoints, $label)) {
        @content;
    }
}
@mixin on-mq($label) {
    @media only screen and (max-width: map-get($breakpoints, $label)) {
        @content;
    }
}
@mixin on-mq-h($label) {
    @media only screen and (max-height: map-get($breakpoints, $label)) {
        @content;
    }
}

//
//  OTHER UTILITIES
//
@mixin raising-box {
    box-shadow: 0 3px 10px rgba($dark, 0.1);
    transition: all 0.25s;

    &:hover {
        box-shadow: 0 3px 10px rgba($dark, 0.15);
        transform: translateY(-1px);
    }
}